# sys-apps/policycoreutils creates /var/lib/selinux directory in
# src_install and then needs it to be available when running
# pkg_postinst, because it does a policy module rebuild there. We
# initially have put /var/lib/selinux into INSTALL_MASK and told
# coreos-base/misc-files to install the directory at
# /usr/lib/selinux/policy together with a symlink at /var/lib/selinux
# pointing to the directory. But this is done too late - at
# sys-apps/policycoreutils' pkg_postinst time, /var/lib/selinux does
# not exist, because coreos-base/misc-files was not yet emerged. So we
# need to fall back to this hack, where we set up /var/lib/selinux and
# /usr/lib/selinux/policy the way we want.
cros_post_src_install_set_up_var_lib_selinux() {
    dodir /usr/lib/selinux
    mv "${ED}/var/lib/selinux" "${ED}/usr/lib/selinux/policy"
    dosym -r /usr/lib/selinux/policy /var/lib/selinux
}

# Do not install python stuff in prod images.
if [[ ${FLATCAR_TYPE} = 'generic' && ${FLATCAR_SUBTYPE} = 'prod' ]]; then
    policycoreutils_mask=" /usr/lib/python-exec "
    INSTALL_MASK+="${policycoreutils_mask}"
    PKG_INSTALL_MASK+="${policycoreutils_mask}"
    unset policycoreutils_mask
fi

# INSTALL_MASK does not work on symlinks.
cros_post_pkg_postinst_drop_rlpkg_symlink() {
    elog "in cros_post_pkg_postinst_drop_rlpkg_symlink, FLATCAR_TYPE is ${FLATCAR_TYPE@Q}, FLATCAR_SUBTYPE is ${FLATCAR_SUBTYPE@Q}"
    if [[ ${FLATCAR_TYPE} = 'generic' && ${FLATCAR_SUBTYPE} = 'prod' ]]; then
        elog "removing /usr/sbin/rlpkg and /usr/bin/rlpkg from ${ROOT@Q}"
        rm -f "${ROOT}"/usr/sbin/rlpkg "${ROOT}"/usr/bin/rlpkg
    fi
}
